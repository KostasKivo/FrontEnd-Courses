
body {
  margin: 0px;
  text-align:center;
  font-family: 'Merriweather', serif;
  color: #40514E;
}


h1{
  margin-top: 50px auto 0 auto;
  text-align: center;
  font-family: 'Sacramento',cursive;
  font-size: 5.625rem;
  color: #66BFBF;
}

h2{
  font-family: 'Montserrat',sans-serif;
  font-size: 2.5rem;
  font-weight: bold;
  color: #66BFBF;
}

h3 {
  font-family: 'Montserrat',sans-serif;
  color: #11999E;
  font-weight: bold;
}

p {
  text-align: center;
}

.top-container {
  background-color: lightblue;
}

.top-cloud {
  position: relative;
  padding: 10px;
  left:12%;
}

.bottom-cloud {
  position:absolute;
}

span {
  text-decoration: underline;
}

a{
  color: #11999E;
  text-decoration: none;
}

.skill-row {
  width: 50%;
  margin: 100px auto 100px auto;
  text-align: left;
  line-height: 2;
}

.skill-img1{
  width: 25%;
  float:left;
  margin-right: 30px;
}

.skill-img2{
  width: 25%;
  float:right;
  margin-left: 30px;
}

.computer-img {
  border-radius: 50%;
  margin-top: 5%;
}

.bottom-container {
  background-color: #66BFBF;
}

.footer-link {
  display: inline-block;
  width: 10%;
  margin-top: 2%;
  color: #11999E;
}

#footer-description {
  color: #EAF6F6;
  background-color: #66BFBF;
  margin-bottom: 0;
  padding-bottom: 2%;
}

.contact-me {
  margin-bottom: 2%;
  line-height: 2;
}

.btn {
  background-color:#66BFBF;
  padding: 1%;
  border-radius: 12px;
  color: white;
  line-height: 5;
}

hr {
  border-style: dotted none none;
  width: 7%;
  border-width: 7px;
  color: #EAF6F6;
}

#middle-description {
  margin-bottom: 5%;
}

.btn:hover{
  color: #30e3cb;
}

/*

Each html element is a block
Some are displayed by blocks as default
Others as inline as defeault

Display:
    Block: Means that the element is a block taking the whole line
    Inline: Means that the element takes only the spaced needed, cant change dimensions
    Inline-block: An element that can change dimensions and takes only the space needed
    None: Element is not visible or takes display space anymore, like it isn't there

Position:
    Static: Is the default position the elements have and how they flow with the Others
    Relative: Moves the element by (top,right,left,bottom) attributes in relation to it's previous position, like giving it a margin
    Absolute: Moves the element relatively the the parent element
    Fixed: The poisition of the object stays the same (ex: if we scroll the page, useful for footers)

Centering elements:
    text-align:center property
    margin:0 auto 0 auto;


 */
